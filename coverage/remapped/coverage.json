{
"C:\\Users\\Tyler\\WebstormProjects\\ReduxCourse\\__tests__\\containers\\MainContainer-test.tsx":{"path":"C:\\Users\\Tyler\\WebstormProjects\\ReduxCourse\\__tests__\\containers\\MainContainer-test.tsx","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":61}},"4":{"start":{"line":6,"column":0},"end":{"line":37,"column":3}},"5":{"start":{"line":8,"column":2},"end":{"line":11,"column":5}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":46}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":129}},"8":{"start":{"line":13,"column":2},"end":{"line":15,"column":5}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":63}},"10":{"start":{"line":17,"column":2},"end":{"line":19,"column":5}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":67}},"12":{"start":{"line":21,"column":2},"end":{"line":23,"column":5}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":68}},"14":{"start":{"line":25,"column":2},"end":{"line":36,"column":5}},"15":{"start":{"line":27,"column":26},"end":{"line":29,"column":5}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":56}},"17":{"start":{"line":33,"column":4},"end":{"line":33,"column":48}},"18":{"start":{"line":35,"column":4},"end":{"line":35,"column":55}}},"fnMap":{"1":{"name":"(anonymous_0)","line":6,"loc":{"start":{"line":6,"column":20},"end":{"line":37,"column":1}}},"2":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":48},"end":{"line":11,"column":3}}},"3":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":46},"end":{"line":15,"column":3}}},"4":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":35},"end":{"line":19,"column":3}}},"5":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":37},"end":{"line":23,"column":3}}},"6":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":44},"end":{"line":36,"column":3}}}},"branchMap":{},"s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"b":{},"f":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"code":"import * as React from 'react';\r\nimport { shallow, mount, render } from 'enzyme';\r\n\r\nimport { MainContainer } from 'containers/Main/MainContainer';\r\n\r\ndescribe('A suite', function() {\r\n\r\n  it('should render without throwing an error', function() {\r\n    const wrapper = shallow(<MainContainer />);\r\n    expect(wrapper.contains(<div className='color' onClick={wrapper.instance()['handleDivClick']}>Name: Tyler</div>)).toBe(true);\r\n  });\r\n\r\n  it('should be selectable by class \"color\"', function() {\r\n    expect(shallow(<MainContainer />).is('.color')).toBe(true);\r\n  });\r\n\r\n  it('should mount in a full DOM', function() {\r\n    expect(mount(<MainContainer />).find('.color').length).toBe(1);\r\n  });\r\n\r\n  it('should render to static HTML', function() {\r\n    expect(render(<MainContainer />).text()).toEqual('Name: Tyler');\r\n  });\r\n\r\n  it('should change text content on click', function() {\r\n    // Render a checkbox with label in the document\r\n    const mainContainer = shallow(\r\n      <MainContainer />\r\n    );\r\n\r\n    expect(mainContainer.text()).toEqual('Name: Tyler');\r\n\r\n    mainContainer.find('div').simulate('click');\r\n\r\n    expect(mainContainer.text()).toEqual('Name: John');\r\n  });\r\n});\r\n","l":{"1":1,"2":1,"4":1,"6":1,"8":1,"9":1,"10":1,"13":1,"14":1,"17":1,"18":1,"21":1,"22":1,"25":1,"27":1,"31":1,"33":1,"35":1}},
"C:\\Users\\Tyler\\WebstormProjects\\ReduxCourse\\app\\containers\\Main\\MainContainer.tsx":{"path":"C:\\Users\\Tyler\\WebstormProjects\\ReduxCourse\\app\\containers\\Main\\MainContainer.tsx","statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":15},"end":{"line":3,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"4":{"start":{"line":5,"column":35},"end":{"line":5,"column":60}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":11}},"6":{"start":{"line":13,"column":2},"end":{"line":18,"column":3}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":26}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"9":{"start":{"line":8,"column":4},"end":{"line":10,"column":6}},"10":{"start":{"line":20,"column":2},"end":{"line":32,"column":3}},"11":{"start":{"line":20,"column":2},"end":{"line":32,"column":2}},"12":{"start":{"line":22,"column":28},"end":{"line":27,"column":5}},"13":{"start":{"line":23,"column":6},"end":{"line":23,"column":28}},"14":{"start":{"line":24,"column":6},"end":{"line":26,"column":9}},"15":{"start":{"line":28,"column":4},"end":{"line":31,"column":6}},"16":{"start":{"line":33,"column":0},"end":{"line":33,"column":1}},"17":{"start":{"line":5,"column":13},"end":{"line":5,"column":26}}},"fnMap":{"1":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":-1}}},"2":{"name":"MainContainer","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}}},"3":{"name":"(anonymous_4)","line":13,"loc":{"start":{"line":13,"column":19},"end":{"line":18,"column":3}}},"4":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":32,"column":3}}},"5":{"name":"(anonymous_6)","line":22,"loc":{"start":{"line":22,"column":28},"end":{"line":27,"column":5}}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":11}},{"start":{"line":7,"column":11},"end":{"line":11,"column":2}}]}},"s":{"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":1,"8":1,"9":5,"10":1,"11":6,"12":6,"13":0,"14":0,"15":6,"16":1,"17":1},"b":{"1":[5,5]},"f":{"1":1,"2":5,"3":1,"4":6,"5":0},"code":"import * as React from 'react';\r\n\r\nconst styles = require('./styles.css');\r\n\r\nexport class MainContainer extends React.Component<any, any> {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: 'Tyler'\r\n    };\r\n  }\r\n\r\n  handleDivClick = () => {\r\n    console.log('click!');\r\n    this.setState({\r\n      name: 'John'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // TODO: remove copy (for hot reloading)\r\n    const handleDivClick1 = () => {\r\n      console.log('click!');\r\n      this.setState({\r\n        name: 'John'\r\n      });\r\n    };\r\n    return (\r\n      // TODO: replace onClick with class member (for hot reloading)\r\n      <div className={styles.color} onClick={this.handleDivClick}>{`Name: ${this.state.name}`}</div>\r\n    );\r\n  }\r\n}\r\n","l":{"1":1,"3":1,"5":1,"7":5,"8":5,"13":5,"14":1,"15":1,"20":6,"22":6,"23":0,"24":0,"28":6,"33":1}}}
